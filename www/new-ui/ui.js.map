{
  "version": 3,
  "sources": ["ui.ts"],
  "sourcesContent": ["/*\n * This file is for functions that should be called by the ui to handle api operations\n * with client-side inputs\n*/\n\nfunction deleteEntryUI(item: InfoEntry) {\n    if (!confirm(\"Are you sure you want to delete this item\")) {\n        return\n    }\n\n    deleteEntry(item.ItemId).then(res => {\n        if (res?.status != 200) {\n            console.error(res)\n            alert(\"Failed to delete item\")\n            return\n        }\n        alert(`Deleted: ${item.En_Title} (${item.Native_Title} : ${item.ItemId})`)\n        updateInfo({ entries: { [String(item.ItemId)]: item } }, true)\n        deselectItem(item)\n        removeSidebarItem(item)\n    })\n}\n\nfunction overwriteEntryMetadataUI(_root: ShadowRoot, item: InfoEntry) {\n    if (!confirm(\"Are you sure you want to overwrite the metadata with a refresh\")) {\n        return\n    }\n\n    overwriteMetadataEntry(item.ItemId).then(res => {\n        if (res.status !== 200) {\n            console.error(res)\n            alert(\"Failed to get metadata\")\n            return\n        }\n        loadMetadata()\n            .then(() => {\n                updateInfo({\n                    entries: {\n                        [String(item.ItemId)]: item\n                    }\n                })\n            })\n    })\n}\n\nasync function newEntryUI() {\n    const form = document.getElementById(\"new-item-form\") as HTMLFormElement\n    document.getElementById(\"new-entry\")?.hidePopover()\n    const data = new FormData(form)\n\n    let artStyle = 0\n\n    const styles = ['is-anime', 'is-cartoon', 'is-handrawn', 'is-digital', 'is-cgi', 'is-live-action']\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i]\n        if (data.get(style)) {\n            artStyle |= 2 ** i\n            data.delete(style)\n        }\n    }\n\n    let validEntries: Record<string, FormDataEntryValue> = {}\n    for (let [name, value] of data.entries()) {\n        if (value == \"\") continue\n        validEntries[name] = value\n    }\n\n    if(validEntries[\"libraryId\"] && validEntries[\"libraryId\"] == \"0\") {\n        delete validEntries[\"libraryId\"]\n    }\n\n    const queryString = \"?\" + Object.entries(validEntries).map(v => `${v[0]}=${encodeURIComponent(String(v[1]))}`).join(\"&\") + `&art-style=${artStyle}`\n\n    const tz = Intl.DateTimeFormat().resolvedOptions().timeZone\n\n    let res = await fetch(`${apiPath}/add-entry${queryString}&timezone=${encodeURIComponent(tz)}`)\n    let text = await res.text()\n    if (res.status !== 200) {\n        alert(text)\n        return\n    }\n\n    let json = parseJsonL(mkStrItemId(text))\n    loadMetadata().then(() => {\n        updateInfo({\n            entries: { [json.ItemId]: json },\n        })\n    })\n\n    clearItems()\n\n    selectItem(json, mode, true)\n    renderSidebarItem(json)\n}\n\n\n"],
  "mappings": "aAKA,SAAS,cAAcA,EAAiB,CAC/B,QAAQ,2CAA2C,GAIxD,YAAYA,EAAK,MAAM,EAAE,KAAKC,GAAO,CACjC,GAAIA,GAAK,QAAU,IAAK,CACpB,QAAQ,MAAMA,CAAG,EACjB,MAAM,uBAAuB,EAC7B,MACJ,CACA,MAAM,YAAYD,EAAK,QAAQ,KAAKA,EAAK,YAAY,MAAMA,EAAK,MAAM,GAAG,EACzE,WAAW,CAAE,QAAS,CAAE,CAAC,OAAOA,EAAK,MAAM,CAAC,EAAGA,CAAK,CAAE,EAAG,EAAI,EAC7D,aAAaA,CAAI,EACjB,kBAAkBA,CAAI,CAC1B,CAAC,CACL,CAEA,SAAS,yBAAyBE,EAAmBF,EAAiB,CAC7D,QAAQ,gEAAgE,GAI7E,uBAAuBA,EAAK,MAAM,EAAE,KAAKC,GAAO,CAC5C,GAAIA,EAAI,SAAW,IAAK,CACpB,QAAQ,MAAMA,CAAG,EACjB,MAAM,wBAAwB,EAC9B,MACJ,CACA,aAAa,EACR,KAAK,IAAM,CACR,WAAW,CACP,QAAS,CACL,CAAC,OAAOD,EAAK,MAAM,CAAC,EAAGA,CAC3B,CACJ,CAAC,CACL,CAAC,CACT,CAAC,CACL,CAEA,eAAe,YAAa,CACxB,MAAMG,EAAO,SAAS,eAAe,eAAe,EACpD,SAAS,eAAe,WAAW,GAAG,YAAY,EAClD,MAAMC,EAAO,IAAI,SAASD,CAAI,EAE9B,IAAIE,EAAW,EAEf,MAAMC,EAAS,CAAC,WAAY,aAAc,cAAe,aAAc,SAAU,gBAAgB,EACjG,QAASC,EAAI,EAAGA,EAAID,EAAO,OAAQC,IAAK,CACpC,IAAIC,EAAQF,EAAOC,CAAC,EAChBH,EAAK,IAAII,CAAK,IACdH,GAAY,GAAKE,EACjBH,EAAK,OAAOI,CAAK,EAEzB,CAEA,IAAIC,EAAmD,CAAC,EACxD,OAAS,CAACC,EAAMC,CAAK,IAAKP,EAAK,QAAQ,EAC/BO,GAAS,KACbF,EAAaC,CAAI,EAAIC,GAGtBF,EAAa,WAAgBA,EAAa,WAAgB,KACzD,OAAOA,EAAa,UAGxB,MAAMG,EAAc,IAAM,OAAO,QAAQH,CAAY,EAAE,IAAII,GAAK,GAAGA,EAAE,CAAC,CAAC,IAAI,mBAAmB,OAAOA,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,EAAI,cAAcR,CAAQ,GAE3IS,EAAK,KAAK,eAAe,EAAE,gBAAgB,EAAE,SAEnD,IAAIb,EAAM,MAAM,MAAM,GAAG,OAAO,aAAaW,CAAW,aAAa,mBAAmBE,CAAE,CAAC,EAAE,EACzFC,EAAO,MAAMd,EAAI,KAAK,EAC1B,GAAIA,EAAI,SAAW,IAAK,CACpB,MAAMc,CAAI,EACV,MACJ,CAEA,IAAIC,EAAO,WAAW,YAAYD,CAAI,CAAC,EACvC,aAAa,EAAE,KAAK,IAAM,CACtB,WAAW,CACP,QAAS,CAAE,CAACC,EAAK,MAAM,EAAGA,CAAK,CACnC,CAAC,CACL,CAAC,EAED,WAAW,EAEX,WAAWA,EAAM,KAAM,EAAI,EAC3B,kBAAkBA,CAAI,CAC1B",
  "names": ["item", "res", "_root", "form", "data", "artStyle", "styles", "i", "style", "validEntries", "name", "value", "queryString", "v", "tz", "text", "json"]
}
