{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["type ClientSearchFilters = {\n    filterRules: string[]\n    newSearch: string\n    sortBy: string\n}\n\ntype GlobalsNewUi = {\n    userEntries: Record<string, UserEntry>\n    metadataEntries: Record<string, MetadataEntry>\n    entries: Record<string, InfoEntry>\n    events: UserEvent[]\n    results: InfoEntry[]\n    selectedEntries: InfoEntry[]\n    libraries: Record<string, InfoEntry>\n    viewingLibrary: bigint\n}\n\nlet globalsNewUi: GlobalsNewUi = {\n    userEntries: {},\n    metadataEntries: {},\n    entries: {},\n    results: [],\n    events: [],\n    selectedEntries: [],\n    libraries: {},\n    viewingLibrary: 0n,\n}\n\nconst displayItems = document.getElementById(\"entry-output\") as HTMLElement\n\nconst statsOutput = document.getElementById(\"result-stats\") as HTMLElement\n\nconst librarySelector = document.getElementById(\"library-selector\") as HTMLSelectElement\nconst newEntryLibrarySelector = document.querySelector(\"[name=\\\"libraryId\\\"]\") as HTMLSelectElement\n\nlibrarySelector.onchange = function() {\n    let val = librarySelector.value\n    globalsNewUi.viewingLibrary = BigInt(val)\n\n    loadSearch()\n}\n\nfunction getUserExtra(user: UserEntry, prop: string) {\n    return JSON.parse(user.Extra).AIOWeb?.[prop] || null\n}\n\nfunction setUserExtra(user: UserEntry, prop: string, value: string) {\n    let extra = JSON.parse(user.Extra)\n    let AIOWeb = extra.AIOWeb || {}\n    AIOWeb[prop] = value\n    extra.AIOWeb = AIOWeb\n    user.Extra = JSON.stringify(extra)\n}\n\nfunction* findDescendants(itemId: bigint) {\n    let entries = Object.values(globalsNewUi.entries)\n    yield* entries.values()\n        .filter(v => v.ParentId === itemId)\n}\n\nfunction* findCopies(itemId: bigint) {\n    let entries = Object.values(globalsNewUi.entries)\n    yield* entries.values()\n        .filter(v => v.CopyOf === itemId)\n}\n\nfunction resetResultStats() {\n    for (let node of statsOutput.querySelectorAll(\".stat\") || []) {\n        node.setAttribute(\"data-value\", \"0\")\n    }\n    return {\n        totalCost: 0,\n        count: 0\n    }\n}\n\nlet resultStatsProxy = new Proxy({\n    count: 0,\n    totalCost: 0,\n    results: 0,\n    reset() {\n        this.count = 0\n        this.totalCost = 0\n    }\n}, {\n    set(_obj, prop, value) {\n        //@ts-ignore\n        if (!Reflect.set(...arguments)) {\n            return false\n        }\n        let el = statsOutput.querySelector(`[data-stat-name=\"${String(prop)}\"]`) as HTMLElement\n        el.setAttribute(\"data-value\", String(value))\n        return true\n    }\n})\n\ntype ResultStats = {\n    totalCost: number\n    count: number\n    results: number\n}\n\nfunction setResultStat(key: keyof ResultStats, value: number) {\n    resultStatsProxy[key] = value\n}\n\nfunction changeResultStats(key: keyof ResultStats, value: number) {\n    resultStatsProxy[key] += value\n}\n\nfunction changeResultStatsWithItem(item: InfoEntry, multiplier: number = 1) {\n    changeResultStats(\"totalCost\", item.PurchasePrice * multiplier)\n    changeResultStats(\"count\", 1 * multiplier)\n}\n\nfunction changeResultStatsWithItemList(items: InfoEntry[], multiplier: number = 1) {\n    for (let item of items) {\n        changeResultStatsWithItem(item, multiplier)\n    }\n}\n\nfunction updateLibraryDropdown() {\n    for (let i in globalsNewUi.libraries) {\n        let item = globalsNewUi.libraries[i]\n        const opt = document.createElement(\"option\")\n        opt.value = String(item[\"ItemId\"])\n        opt.innerText = item[\"En_Title\"]\n        librarySelector.append(opt)\n    }\n    newEntryLibrarySelector.innerHTML = librarySelector.innerHTML\n}\n\nasync function loadLibraries() {\n    const items = await doQuery3(\"type = 'Library'\")\n\n    librarySelector.innerHTML = '<option value=\"0\">Library</option>'\n    for (let item of items) {\n        globalsNewUi.libraries[String(item[\"ItemId\"])] = item\n    }\n    updateLibraryDropdown()\n}\n\nasync function loadInfoEntries() {\n    const res = await fetch(`${apiPath}/list-entries?uid=${uid}`).catch(console.error)\n\n    if (!res) {\n        alert(\"Could not load all entries\")\n        return\n    }\n\n    const text = await res.text()\n    let jsonL = text.split(\"\\n\").filter(Boolean)\n    let obj: Record<string, InfoEntry> = {}\n    for (let item of jsonL\n        .map(mkStrItemId)\n        .map(parseJsonL)\n    ) {\n        obj[item.ItemId] = item\n    }\n\n    setResultStat(\"results\", jsonL.length)\n\n    return globalsNewUi.entries = obj\n}\n\nfunction findMetadataById(id: bigint): MetadataEntry | null {\n    return globalsNewUi.metadataEntries[String(id)]\n}\n\nfunction findUserEntryById(id: bigint): UserEntry | null {\n    return globalsNewUi.userEntries[String(id)]\n}\n\nfunction findUserEventsById(id: bigint): UserEvent[] {\n    return globalsNewUi.events.filter(v => v.ItemId === id)\n}\n\nfunction findInfoEntryById(id: bigint): InfoEntry | null {\n    return globalsNewUi.entries[String(id)]\n}\n\nasync function loadUserEntries(): Promise<Record<string, UserEntry>> {\n    let items = await loadList<UserEntry>(\"engagement/list-entries\")\n    let obj: Record<string, UserEntry> = {}\n    for (let item of items) {\n        obj[String(item.ItemId)] = item\n    }\n    return globalsNewUi.userEntries = obj\n}\n\nasync function loadUserEvents() {\n    return globalsNewUi.events = await loadList(\"engagement/list-events\")\n}\n\nasync function loadMetadata(): Promise<Record<string, MetadataEntry>> {\n    let items = await loadList<MetadataEntry>(\"metadata/list-entries\")\n    let obj: Record<string, MetadataEntry> = {}\n    for (let item of items) {\n        obj[String(item.ItemId)] = item\n    }\n    return globalsNewUi.metadataEntries = obj\n}\n\n\n/**\n * @description pulls out relevant filters for the client\n * has the side effect of modifying search-query, removing any parts deemed filters for the client\n * eg: \\[start:end\\]\n */\nfunction parseClientsideSearchFiltering(searchForm: FormData): ClientSearchFilters {\n    // let start = 0\n    // let end = -1\n\n    let search = searchForm.get(\"search-query\") as string\n    let filters;\n    [search, ...filters] = search.split(\"->\")\n    filters = filters.map(v => v.trim())\n\n    let sortBy = searchForm.get(\"sort-by\") as string\n\n    return {\n        filterRules: filters,\n        newSearch: search,\n        sortBy,\n    }\n}\n\nfunction applyClientsideSearchFiltering(entries: InfoEntry[], filters: ClientSearchFilters) {\n\n    entries = entries.filter(v => v.Library === globalsNewUi.viewingLibrary)\n\n    if (filters.sortBy !== \"\") {\n        entries = sortEntries(entries, filters.sortBy)\n    }\n\n    for (let filter of filters.filterRules) {\n        filter = filter.trim()\n        if (filter.startsWith(\"is\")) {\n            let ty = filter.split(\"is\")[1]?.trim()\n            if (!ty) continue\n            ty = ty.replace(/(\\w)(\\S*)/g, (_, $1, $2) => {\n                return $1.toUpperCase() + $2\n            })\n            entries = entries.filter(v => v.Type == ty)\n        }\n\n        let slicematch = filter.match(/\\[(\\d*):(-?\\d*)\\]/)\n        if (slicematch) {\n            let start = +slicematch[1]\n            let end = +slicematch[2]\n            entries = entries.slice(start, end)\n        }\n\n        if (filter.startsWith(\"/\") && filter.endsWith(\"/\")) {\n            let re = new RegExp(filter.slice(1, filter.length - 1))\n            entries = entries.filter(v => v.En_Title.match(re))\n        } else if (filter == \"shuffle\" || filter == \"shuf\") {\n            entries = entries.sort(() => Math.random() - Math.random())\n        } else if (filter.startsWith(\"head\")) {\n            const n = filter.slice(\"head\".length).trim() || 1\n            entries = entries.slice(0, Number(n))\n        } else if (filter.startsWith(\"tail\")) {\n            const n = filter.slice(\"tail\".length).trim() || 1\n            entries = entries.slice(entries.length - Number(n))\n        } else if (filter.startsWith(\"sort\")) {\n            let type = filter.slice(\"sort\".length).trim() || \"a\"\n            const reversed = type.startsWith(\"-\") ? -1 : 1\n            if (reversed == -1) type = type.slice(1)\n            switch (type[0]) {\n                case \"a\":\n                    entries.sort((a, b) => (a.En_Title > b.En_Title ? 1 : -1) * reversed)\n                    break;\n                case \"e\": {\n                    const fn = type.slice(1)\n                    entries.sort(() => eval(fn))\n                    break\n                }\n            }\n        } else if (filter.startsWith(\"filter\")) {\n            let expr = filter.slice(\"filter\".length).trim()\n            entries = entries.filter(() => eval(expr))\n        } else if (filter === \"!child\") {\n            entries = entries.filter(v => v.ParentId === 0n)\n        } else if (filter === \"!copy\") {\n            entries = entries.filter(v => v.CopyOf === 0n)\n        }\n    }\n\n    // if (filters.end < 0) {\n    //     filters.end += entries.length + 1\n    // }\n    return entries\n    //\n    // return entries.slice(filters.start, filters.end)\n}\n\nasync function loadSearch() {\n    let form = document.getElementById(\"sidebar-form\") as HTMLFormElement\n\n    let formData = new FormData(form)\n\n    let filters = parseClientsideSearchFiltering(formData)\n\n    let entries = await doQuery3(String(filters.newSearch) || \"#\")\n\n    entries = applyClientsideSearchFiltering(entries, filters)\n\n    setResultStat(\"results\", entries.length)\n\n    globalsNewUi.results = entries\n\n    clearItems()\n    if (entries.length === 0) {\n        setError(\"No results\")\n        clearSidebar()\n        return\n    }\n    renderSidebar(entries)\n}\n\nfunction normalizeRating(rating: number, maxRating: number) {\n    return rating / maxRating * 100\n}\n\nfunction genericMetadata(itemId: bigint): MetadataEntry {\n    return {\n        ItemId: itemId,\n        Rating: 0,\n        RatingMax: 0,\n        Description: \"\",\n        ReleaseYear: 0,\n        Thumbnail: \"\",\n        MediaDependant: \"\",\n        Datapoints: \"{}\",\n        Title: \"\",\n        Native_Title: \"\",\n    }\n}\n\nfunction genericUserEntry(itemId: bigint): UserEntry {\n    return {\n        ItemId: itemId,\n        Status: \"\",\n        ViewCount: 0,\n        UserRating: 0,\n        Notes: \"\",\n        CurrentPosition: \"\",\n        Extra: \"{}\",\n    }\n}\n\n/**\n * @description Updates information in the global information table, also refreshes the mode's dispaly info, and the sidebar info\n */\nfunction updateInfo({\n    entries, metadataEntries, events, userEntries\n}: Partial<GlobalsNewUi>, del = false) {\n\n    if(del && events) {\n        let specific = events.map(v => `${v.ItemId}:${v.Timestamp || v.After}:${v.Event}`)\n        globalsNewUi.events = globalsNewUi.events.filter(v => !specific.includes(`${v.ItemId}:${v.Timestamp || v.After}:${v.Event}`))\n    } else if(events) {\n        globalsNewUi.events = globalsNewUi.events.concat(events)\n    }\n\n    let updatedLibraries = false\n\n    for (let entry in entries) {\n        let e = entries[entry]\n        if (e.Type === \"Library\") {\n            if (!del) {\n                globalsNewUi.libraries[entry] = e\n            } else {\n                delete globalsNewUi.libraries[entry]\n            }\n            updatedLibraries = true\n        }\n\n\n        if (!del) {\n            let metadata = metadataEntries?.[entry] || findMetadataById(e.ItemId) || genericMetadata(e.ItemId)\n            let user = userEntries?.[entry] || findUserEntryById(e.ItemId) || genericUserEntry(e.ItemId)\n\n            globalsNewUi.entries[entry] = e\n            globalsNewUi.metadataEntries[entry] = metadata\n            globalsNewUi.userEntries[entry] = user\n\n            refreshSidebarItem(e)\n            if(mode.refresh)\n                mode.refresh(e.ItemId)\n        } else {\n            delete globalsNewUi.entries[entry]\n            delete globalsNewUi.metadataEntries[entry]\n            delete globalsNewUi.userEntries[entry]\n        }\n    }\n\n    if (updatedLibraries) {\n        updateLibraryDropdown()\n    }\n}\n\nasync function refreshInfo() {\n    return Promise.all([\n        loadLibraries(),\n        loadInfoEntries(),\n        loadMetadata(),\n        loadUserEntries(),\n        loadUserEvents()\n    ])\n}\n\nasync function main() {\n    await refreshInfo()\n\n    if (initialSearch) {\n        let entries = await doQuery3(initialSearch)\n\n        setResultStat(\"results\", entries.length)\n\n        globalsNewUi.results = entries\n\n        if (entries.length === 0) {\n            alert(\"No results\")\n            return\n        }\n        renderSidebar(entries)\n    } else {\n        let tree = Object.values(globalsNewUi.entries).sort((a, b) => {\n            let aUInfo = findUserEntryById(a.ItemId)\n            let bUInfo = findUserEntryById(b.ItemId)\n            if (!aUInfo || !bUInfo) return 0\n            return bUInfo?.UserRating - aUInfo?.UserRating\n        })\n\n        globalsNewUi.results = tree\n        renderSidebar(tree)\n    }\n}\n\nmain()\n\nlet servicing = false\nasync function remote2LocalThumbService() {\n    if (servicing) return\n\n    servicing = true\n    for (let item in globalsNewUi.metadataEntries) {\n        let metadata = globalsNewUi.metadataEntries[item]\n        let thumbnail = metadata.Thumbnail\n\n        let userTitle = globalsNewUi.entries[item].En_Title\n        let userNativeTitle = globalsNewUi.entries[item].Native_Title\n\n        if (!thumbnail) continue\n        if (thumbnail.startsWith(`${apiPath}/resource/thumbnail`) || thumbnail.startsWith(`${apiPath}/resource/get-thumbnail`)) continue\n        console.log(thumbnail)\n\n        //FIXME: this should work, but for some reason just doesn't\n        if (thumbnail.startsWith(\"data:\")) continue\n        // if (thumbnail.startsWith(`${location.origin}${apiPath}/resource/thumbnail`)) {\n        //     updateThumbnail(metadata.ItemId, `${apiPath}/resource/thumbnail?id=${metadata.ItemId}`)\n        //     continue\n        // }\n\n        console.log(`${userTitle || userNativeTitle || metadata.Title || metadata.Native_Title} Has a remote image url, downloading`)\n\n        fetch(`${apiPath}/resource/download-thumbnail?id=${metadata.ItemId}`).then(res => {\n            if (res.status !== 200) return \"\"\n            return res.text()\n        }).then(hash => {\n            if (!hash) return\n            console.log(`THUMBNAIL HASH: ${hash}`)\n            updateThumbnail(metadata.ItemId, `${apiPath}/resource/get-thumbnail?hash=${hash}`).then(res => res.text()).then(console.log)\n        })\n\n        await new Promise(res => setTimeout(res, 200))\n\n        if (!servicing) break\n    }\n\n    console.log(\"ALL IMAGES HAVE BEEN INLINED\")\n\n    servicing = false\n}\n"],
  "mappings": "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",
  "names": ["val", "user", "prop", "value", "extra", "AIOWeb", "itemId", "v", "node", "_obj", "key", "item", "multiplier", "items", "i", "opt", "res", "jsonL", "obj", "id", "searchForm", "search", "filters", "sortBy", "ty", "_", "$1", "$2", "start", "end", "re", "n", "a", "b", "form", "formData", "entries", "rating", "maxRating", "metadataEntries", "events", "userEntries", "del", "specific", "updatedLibraries", "entry", "e", "metadata", "tree", "aUInfo", "bUInfo", "thumbnail", "userTitle", "userNativeTitle", "hash"]
}
