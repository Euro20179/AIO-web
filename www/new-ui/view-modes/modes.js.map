{
  "version": 3,
  "sources": ["modes.ts"],
  "sourcesContent": ["\ntype DisplayMode = {\n    add: (entry: InfoEntry, updateStats?: boolean) => any\n    sub: (entry: InfoEntry, updateStats?: boolean) => any\n    addList: (entry: InfoEntry[], updateStats?: boolean) => any\n    subList: (entry: InfoEntry[], updateStats?: boolean) => any\n    refresh?: (id: bigint) => any\n    putSelectedInCollection?: () => any\n    addTagsToSelected?: () => any\n    [key: string]: any\n}\n\nconst modes = [modeDisplayEntry, modeGraphView, modeCalc, modeGallery]\nconst modeOutputIds = [\"entry-output\", \"graph-output\", \"calc-output\", \"gallery-output\"]\n\nlet idx = modeOutputIds.indexOf(location.hash.slice(1))\n\nlet mode = modes[idx]\n\nfunction selectItem(item: InfoEntry, mode: DisplayMode, updateStats: boolean = true) {\n    globalsNewUi.selectedEntries.push(item)\n    mode.add(item, updateStats)\n}\n\nfunction deselectItem(item: InfoEntry, updateStats: boolean = true) {\n    globalsNewUi.selectedEntries = globalsNewUi.selectedEntries.filter(a => a.ItemId !== item.ItemId)\n    mode.sub(item, updateStats)\n}\n\nfunction selectItemList(itemList: InfoEntry[], mode: DisplayMode, updateStats: boolean = true) {\n    globalsNewUi.selectedEntries = globalsNewUi.selectedEntries.concat(itemList)\n    mode.addList(itemList, updateStats)\n}\n\nfunction toggleItem(item: InfoEntry, updateStats: boolean = true) {\n    if (globalsNewUi.selectedEntries.find(a => a.ItemId === item.ItemId)) {\n        deselectItem(item, updateStats)\n    } else {\n        selectItem(item, mode, updateStats)\n    }\n}\n\nfunction clearItems() {\n    mode.subList(globalsNewUi.selectedEntries)\n    globalsNewUi.selectedEntries = []\n}\n\nfunction putSelectedToCollection() {\n    if (mode.putSelectedInCollection) {\n        mode.putSelectedInCollection()\n    } else {\n        alert(\"This mode does not support putting items into a collection\")\n    }\n}\n\nfunction addTagsToSelected() {\n    if (mode.addTagsToSelected) {\n        mode.addTagsToSelected()\n    } else {\n        alert(\"This mode does not support adding tags to selected items\")\n    }\n}\n\ndocument.getElementById(\"view-toggle\")?.addEventListener(\"change\", e => {\n    mode.subList(globalsNewUi.selectedEntries)\n\n    let name = (e.target as HTMLSelectElement).value\n\n    let curModeIdx = modeOutputIds.indexOf(name)\n\n    mode = modes[curModeIdx]\n    location.hash = name\n\n    mode.addList(globalsNewUi.selectedEntries)\n})\n\nconst viewAllElem = document.getElementById(\"view-all\") as HTMLInputElement\nviewAllElem.addEventListener(\"change\", e => {\n    clearItems()\n    if ((e.target as HTMLInputElement)?.checked) {\n        selectItemList(globalsNewUi.results, mode)\n    } else {\n        resultStatsProxy.reset()\n    }\n})\n"],
  "mappings": "aAYA,MAAM,MAAQ,CAAC,iBAAkB,cAAe,SAAU,WAAW,EAC/D,cAAgB,CAAC,eAAgB,eAAgB,cAAe,gBAAgB,EAEtF,IAAI,IAAM,cAAc,QAAQ,SAAS,KAAK,MAAM,CAAC,CAAC,EAElD,KAAO,MAAM,GAAG,EAEpB,SAAS,WAAWA,EAAiBC,EAAmBC,EAAuB,GAAM,CACjF,aAAa,gBAAgB,KAAKF,CAAI,EACtCC,EAAK,IAAID,EAAME,CAAW,CAC9B,CAEA,SAAS,aAAaF,EAAiBE,EAAuB,GAAM,CAChE,aAAa,gBAAkB,aAAa,gBAAgB,OAAOC,GAAKA,EAAE,SAAWH,EAAK,MAAM,EAChG,KAAK,IAAIA,EAAME,CAAW,CAC9B,CAEA,SAAS,eAAeE,EAAuBH,EAAmBC,EAAuB,GAAM,CAC3F,aAAa,gBAAkB,aAAa,gBAAgB,OAAOE,CAAQ,EAC3EH,EAAK,QAAQG,EAAUF,CAAW,CACtC,CAEA,SAAS,WAAWF,EAAiBE,EAAuB,GAAM,CAC1D,aAAa,gBAAgB,KAAKC,GAAKA,EAAE,SAAWH,EAAK,MAAM,EAC/D,aAAaA,EAAME,CAAW,EAE9B,WAAWF,EAAM,KAAME,CAAW,CAE1C,CAEA,SAAS,YAAa,CAClB,KAAK,QAAQ,aAAa,eAAe,EACzC,aAAa,gBAAkB,CAAC,CACpC,CAEA,SAAS,yBAA0B,CAC3B,KAAK,wBACL,KAAK,wBAAwB,EAE7B,MAAM,4DAA4D,CAE1E,CAEA,SAAS,mBAAoB,CACrB,KAAK,kBACL,KAAK,kBAAkB,EAEvB,MAAM,0DAA0D,CAExE,CAEA,SAAS,eAAe,aAAa,GAAG,iBAAiB,SAAU,GAAK,CACpE,KAAK,QAAQ,aAAa,eAAe,EAEzC,IAAIG,EAAQ,EAAE,OAA6B,MAEvCC,EAAa,cAAc,QAAQD,CAAI,EAE3C,KAAO,MAAMC,CAAU,EACvB,SAAS,KAAOD,EAEhB,KAAK,QAAQ,aAAa,eAAe,CAC7C,CAAC,EAED,MAAM,YAAc,SAAS,eAAe,UAAU,EACtD,YAAY,iBAAiB,SAAU,GAAK,CACxC,WAAW,EACN,EAAE,QAA6B,QAChC,eAAe,aAAa,QAAS,IAAI,EAEzC,iBAAiB,MAAM,CAE/B,CAAC",
  "names": ["item", "mode", "updateStats", "a", "itemList", "name", "curModeIdx"]
}
