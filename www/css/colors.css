@property --pink {
    syntax: "<color>";
    initial-value: #f7c8e0;
    inherits: true;
}

@property --green {
    syntax: "<color>";
    initial-value: #dfffd8;
    inherits: true;
}

@property --light-blue {
    syntax: "<color>";
    initial-value: #b4e4ff;
    inherits: true;
}

@property --blue {
    syntax: "<color>";
    initial-value: #95bdff;
    inherits: true;
}

@property --yellow {
    syntax: "<color>";
    initial-value: #e5c890;
    inherits: true;
}

@property --lavender {
    syntax: "<color>";
    initial-value: #b4befe;
    inherits: true;
}

@property --red {
    syntax: "<color>";
    initial-value: #e78284;
    inherits: true;
}

@property --main {
    syntax: "<color>";
    initial-value: #24273a;
    inherits: true;
}

@property --input-border-roundness {
    syntax: "<length>";
    initial-value: 5px;
    inherits: true;
}

@media (prefers-color-scheme: light) {
    :root {
        --text-color: CanvasText;
        --main: #eff1f5;
        --red: #d20f39;
        --pink: #ea76cb;
        --green: #40a02b;
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --text-color: hsl(from var(--main) h s calc(l * 95%))
    }
}

:root {
    --secondary: hsl(from var(--main) calc(h - 20) s calc(l * 1.8));

    @supports (color: rgb(calc(sign(1)) 0 0)) {
        /*oklch doesnt work for some reason*/
        --secondary: lch(from var(--main) calc(l + (sign(abs(l - 100) - 50) * 20)) c calc(h));
        --text-color: hsl(from var(--main) h s calc(l + (sign(abs(l - 100) - 50)) * 90));
    }

    --error: var(--red);
    --warn: var(--yellow);

    --input-background: var(--secondary);
    --input-border-color: currentColor;
    --border-roundness: var(--input-border-roundness);

    --scrollbar-bar-color: var(--blue);
    --scrollbar-gutter-color: var(--secondary);

    --highlight: var(--blue);
    --highlight-text-color: var(--main);
}
