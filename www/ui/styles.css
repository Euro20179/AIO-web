@import "/css/general.css";

@layer general, utility, components;

@layer general {

    html,
    body {
        height: 100%;
        margin: 0;

        container: body / inline-size;
    }

    form {
        flex-grow: 1;
        display: flex;

        flex-wrap: wrap;
    }

    button,
    input,
    select {
        font-family: inherit;
    }

    select {
        /*webkit detection*/
        @supports (-webkit-backdrop-filter: blur(1px)) {
            -webkit-appearance: none;
        }
        -moz-appearance: revert;
    }
}

@layer utility {
    .grid-row {
        display: grid;
        grid-auto-flow: row;
    }

    .close {
        margin: 20px;
    }
}

@layer components {

    .user-script {
        border: 1px solid var(--light-blue);
        padding: 5px;
        border-radius: var(--border-roundness);

        h3 {
            cursor: pointer;
            text-decoration: underline;
            text-transform:capitalize;
        }
    }

    #error-output {
        display: none;
    }

    p:has(#login-reason) {
        text-align: center;
    }

    p:has(#login-reason:empty) {
        display: none;
    }

    /*we NEED 0 specificity here*/
    :where(#entry-output,
        #graph-output,
        #calc-output,
        #gallery-output,
        #event-output,
        #script-output) {
        &:target {
            display: inherit;
        }

        &:not(:target) {
            display: none;
        }
    }

    #sidebar-form {
        position: relative;
    }

    #help-link {
        text-align: center;
        display: block;
        align-content: center;
        cursor: pointer;
        margin: 0 1ch;
    }

    #gallery-items img {
        width: 50cqb;
    }

    #view-all {
        vertical-align: bottom;
    }

    #main {
        height: 100%;
        /*DO NOT SET THIS TO FLEX
            it causes a weird perf bug in chrome where every time anything happens
            (including the user typing in the input box) it recalculates layout

            the solution was to:
            set this to clip,
            remove it's flex status
            set overflow on #sidebar-items
            set height on #sidebar-items to 100cqb
        */
        overflow: clip;
    }

    #notifications {
        position: fixed;
        bottom: 0;
        right: 0;
        display: flex;
        flex-direction: column;

        .notification {
            padding: 30px;
            border-bottom: 1px solid var(--secondary);
            white-space: pre;
            background: var(--main);
            border: 2px solid var(--secondary);
        }

        .notification::before {
            content: "Notification\a";
        }
    }

    #main-ui.display-mode> :not(#viewing-area) {
        display: none;
    }

    .display-mode #viewing-area {
        height: 100%;
    }

    #main-ui {
        height: 100%;
        flex-grow: 1;

        display: grid;

        gap: 1cqi;

        @container body (width >=800px) {
            grid-template-areas:
                "form form form"
                "sidebar main main"
                "sidebar main main";
            grid-template-columns: max-content 1fr 1fr;
            grid-template-rows: min-content 1fr 1fr;
        }

        @container body (width < 800px) {
            grid-template-rows: max-content min-content 3fr;
            grid-template-columns: 1fr 1fr 0.5fr;
            grid-template-areas:
                "form form form"
                "sidebar sidebar sidebar"
                "main main main";

            position: relative;
        }

        &.catalog-mode {
            grid-template-areas: "form form form" "sidebar sidebar sidebar" "sidebar sidebar sidebar";
        }

        &.display-mode {
            display: block;
        }
    }

    #new-entry h3 {
        text-align: center;
    }

    #new-item-form {
        display: flex;
        flex-direction: column;
        gap: 1cap;
        margin: 0 20%;
    }

    #new-entry-button {
        @container (width < 70ch) {
            justify-self: center;
            width: 100%;
            margin-bottom: 10px;
        }

        @container (width >=70ch) {
            justify-self: end;
        }

        width: 50px;
        aspect-ratio: 1 / 1;
    }

    #search-area {
        grid-area: form;

        text-wrap: nowrap;
        overflow-x: auto;
        display: grid;
        grid-template-columns: min-content 1fr min-content min-content;
        width: 100%;

        border-bottom: 2px solid var(--secondary);

        @container (width < 115ch) {
            grid-template-areas:
                "new searching searching"
                "stats stats view-toggle";
        }

        @container (width < 600px) {
            [type="submit"] {
                display: none;
            }
        }


        :not([multiple]) {
            vertical-align: top;
        }


        [name="search-query"] {
            width: 10cqi;
            flex-grow: 1;
        }

        div:has(> [name="sort-by"]) {
            flex-shrink: 2;
            grid-template-rows: 1fr 1fr;
            width: min(20cqi, 100px);

            @container (width > 900px) {
                grid-template-columns: 1fr 1fr;
                grid-template-rows: 1fr;
                width: 20cqi;
            }
        }

        [name="sort-by"] {
            flex-grow: 0.3;
            width: 100%;
        }

        [name="uid"] {
            width: 100%;
        }

        [data-stat-name="totalCost"]::before {
            content: "$"
        }

        [data-stat-name]:not([data-stat-name="totalCost"])::before {
            content: attr(data-stat-name) ": "
        }
    }

    div:has(> #result-stats) {
        display: flex;
        overflow: auto;
        width: max(100px, 30cqi);

        @container (width < 800px) {
            display: none;
        }
    }

    #result-stats {

        display: flex;
        gap: 10px;

        *:not(:last-child) {
            padding-right: 10px;
            border-right: 1px dashed white;
        }

        * {
            align-content: center;
        }
    }

    #result-stats::before {
        content: "Stats";
        border-right: 1px dashed white;
        text-align: center;

        padding: 0 10px;
        align-content: center;
    }

    #selected-item-actions {
        justify-content: left;
        display: flex;
    }

    :has(#graph-output:target, #gallery-output:target) {
        #selected-item-actions {
            display: none;
        }
    }

    #viewing-area {
        container-name: viewing-area;
        container-type: size;
        grid-area: main;

        &:not(:has(:where(display-entry, #calc-output:target, #gallery-output:target, #graph-output:target, #event-output:target))) {
            #error-output {
                display: unset;
            }

            #error::after {
                /*default error*/
                content: attr(data-error, "No items selected");
            }
        }

        &:not(:has(display-entry)) {
            align-items: center;
        }

        @container body (width < 800px) {
            grid-column: 1 / -1;
            overflow: auto auto;
        }

        @container body (width >=800px) {
            grid-area: main;
        }
    }

    #calc-output:target {
        width: 100%;
        height: 100%;

        display: grid;
        grid-template-rows: min-content min-content 1fr;

        #calc-items {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(33cqi, 1fr));
        }
    }


    #graph-output {
        width: 100%;
        height: 100%;

        border: 2px solid hsl(from var(--secondary) h s 30%);

        form {
            position: sticky;
            top: 0;
            float: right;
            align-content: start;

            >* {
                height: fit-content;
            }
        }
    }

    #graph-output:target>div {
        display: grid;
        grid-template-columns: 1fr 1fr;
        width: 100%;
        height: 100%;

        div {
            width: 90%;
        }
    }


    #entry-output:target {
        --grid-size: 50%;

        --gap-size: 10px;

        gap: var(--gap-size);

        height: 100%;
        overflow: auto auto;

        grid-area: main;

        display: flex;

        @container viewing-area (width >=800px) {
            flex-wrap: wrap;
        }

        @container viewing-area (max-width: 800px) {
            display: grid;
            grid-auto-flow: column;

            /*if there are at least 2 children, column size should be 80%*/
            &:has(:nth-child(2)) {
                grid-auto-columns: 80%;
            }

            /*otherwise, the 1 item should get all the width*/
            &:not(:has(:nth-child(2))) {
                grid-auto-columns: 100%;
            }
        }
    }

    #sidebar {
        grid-area: sidebar;
        height: 100%;
        width: clamp(100px, 20cqi, 200px);
        resize: horizontal;

        container: sidebar / inline-size;

        @container body (width < 800px) {
            &>div:first-child {
                position: sticky;
                left: 0;
            }

            width: 100%;
        }
    }

    #sidebar-navigation {
        position: sticky;
        top: 0;
        z-index: 1;
        background: var(--main);

        padding: 5px;

        display: grid;
        grid-template-rows: 1fr 1fr;
        grid-template-columns: 80%;
        justify-content: center;

        @container body (width < 800px) {
            display: grid;
            grid-template-columns: 1fr 1fr;
            justify-content: space-around;
        }
    }

    #sidebar-items {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));

        min-height: 10dvh;
        max-height: 83%;

        width: 100%;

        float: left;

        padding: 0;

        @container body (width < 800px) {
            grid-column: 1 / -1;
            flex-direction: row;
            min-width: fit-content;
            min-height: fit-content;
        }

        @container body (width >=800px) {
            height: 100cqb;
        }
    }

    #result-info {
        grid-area: results;
    }


    #script-root {
        display: grid;
        grid-template-areas:
            "input run-button"
            "output output";

        grid-template-rows: max-content 1fr;
        grid-template-columns: 1fr max-content;

        gap: var(--small-gap);

        width: 100cqw;
        height: 100cqh;

        padding: 0 10ch;

        #script-execute {
            height: 100%;
            margin-inline: 2ch;
            align-self: center;
        }

        #script-execute-output {
            grid-area: output;
            widtH: 100%;
        }

        #script {
            resize: vertical;
            grid-area: input;
        }
    }
}
